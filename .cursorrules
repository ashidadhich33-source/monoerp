# Cursor Project Guardrails — Retail ERP Monorepo (V5, Product-wise GST)
# Date: 2025-09-05

## Product-wise GST
- Every sale/purchase line must resolve a GST rate using this order:
  1) item.gst_rate_pct (+ cess_pct)
  2) hsn default
  3) tax_mappings (brand → category → sub_category → global) active by date
- If unresolved, **block posting** (unless an explicit global fallback is configured).

## Split Logic
- Intra-state: split equally into CGST & SGST. Inter-state: IGST full. Use company.place_of_supply_state vs party.state_code.
- Returns must reverse original tax split and rounding.

## Inclusive/Exclusive Pricing
- Items have `tax_inclusive` flag. Use inclusive extraction or exclusive addition accordingly.
- Round line tax to 2 decimals; invoice round-off posted to a dedicated account.

## Data Model
- Items: add `gst_rate_pct NUMERIC(5,2)`, `cess_pct NUMERIC(5,2)`, `tax_inclusive BOOLEAN` (default true).
- Masters: `hsn_codes`, `tax_rates`, `tax_mappings` (scoped), and company GST profile.
- Block any hard-coded slab (like MRP<1000) unless explicitly configured via tax_mappings.

## UI/UX
- Item form shows HSN, GST Rate %, Cess %, Tax Inclusive toggle.
- POS displays applied GST% and split; no rate edits at POS unless user has permission.
- All reports/prints use **DD/MM/YY** date format.

## Tests
- Require tests for inclusive/exclusive, all common rates (0, 3, 5, 12, 18, 28), cess, intra/inter-state, and returns.

## Don’ts
- Don’t compute tax in frontend; call backend for authoritative tax breakdowns.
- Don’t rely on slab-only logic; use product-wise resolution pipeline.


# Cursor Guardrails — E‑Commerce Readiness (V6 Addendum) — 2025-09-05

## Channels & Contracts
- Treat e‑commerce platforms as **channels**. Add `channels`, `channel_products`, `channel_price_lists`, `orders`, `fulfillments`, `rma`.
- Public APIs must be stable and versioned under `/channels/:code/...` and signed (HMAC).

## Source of Truth
- ERP is the **source of truth** for stock, tax (GST from V5), and accounting.
- Channel price lists may override price only; discount eligibility must be enforced server‑side.

## Inventory Reservation
- Reservation policies per channel (`reserve_on=add_to_cart|payment`). Use transactional reservations with expiry.
- Never reserve negative stock unless channel allows oversell.

## Webhooks
- Verify HMAC signatures and timestamps. Make processing idempotent. Exponential backoff on failures, with DLQ.

## Payments
- Payment notifications update order payment_status and post GL for captures/refunds. Gateway fees mapped to expense accounts.

## Returns
- RMA drives refunds/exchanges. Restock only after QC pass. Reverse GST using original split logic.

## Don’ts
- Don’t compute pricing/discounts/taxes in storefront; call ERP APIs.
- Don’t mix online and POS reservations; use a consistent allocation service.
