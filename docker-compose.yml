version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: erpadmin
      POSTGRES_PASSWORD: erpadmin
      POSTGRES_DB: erp_control
      TZ: Asia/Kolkata
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    environment:
      TZ: Asia/Kolkata
    ports:
      - "6379:6379"

  api:
    build: ./backend
    environment:
      DATABASE_URL_CONTROL: postgresql+psycopg2://erpadmin:erpadmin@db:5432/erp_control
      MULTI_TENANT_MODE: per_db
      REDIS_URL: redis://redis:6379/0
      UVICORN_HOST: 0.0.0.0
      UVICORN_PORT: 8000
      TZ: Asia/Kolkata
      BACKUP_ROOT: /backups
      BACKUP_TIME: "02:30"
    depends_on:
      - db
      - redis
    volumes:
      - backups:/backups
    ports:
      - "8000:8000"

  worker:
    build: ./backend
    command: python -m app.workers.rq_worker
    environment:
      DATABASE_URL_CONTROL: postgresql+psycopg2://erpadmin:erpadmin@db:5432/erp_control
      MULTI_TENANT_MODE: per_db
      REDIS_URL: redis://redis:6379/0
      TZ: Asia/Kolkata
    depends_on:
      - db
      - redis
    volumes:
      - backups:/backups

  scheduler:
    build: ./backend
    command: python -m app.workers.scheduler
    environment:
      DATABASE_URL_CONTROL: postgresql+psycopg2://erpadmin:erpadmin@db:5432/erp_control
      MULTI_TENANT_MODE: per_db
      REDIS_URL: redis://redis:6379/0
      TZ: Asia/Kolkata
      BACKUP_ROOT: /backups
      BACKUP_TIME: "02:30"
    depends_on:
      - db
      - redis
    volumes:
      - backups:/backups

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: http://localhost:8000
      TZ: Asia/Kolkata
    ports:
      - "5173:5173"
    depends_on:
      - api

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      TZ: Asia/Kolkata
    ports:
      - "80:80"
    depends_on:
      - api
      - frontend

volumes:
  pgdata:
  backups:
